#include "stdio.h"
#include "string.h"

char $(gates_outputs_array_name)[$(gates_outputs_array_length)] = {0};
char $(registers_array_name)[$(registers_array_length)];
char $(circuit_outputs_array_name)[$(circuit_outputs_array_length)];
char $(circuit_inputs_array_name)[$(circuit_inputs_array_length)];

int main (int argc, char ** argv)
 {
    int read_bytes;
    int cycles;
    int i;
    int step_by_step;
   
    if (argc < 2 || argc > 3 || (argc == 3 && strcmp(argv[1],"-s")))
     {
        fprintf (stderr, "Usage: %s [-s] CYCLES\n", argv[0]);
        return -1;
     }
    for (i = 0 ; argv[argc-1][i] ; i++)
     {
        if ( argv[argc-1][i] < '0' || argv[argc-1][i] > '9' )
         {
            fprintf (stderr, "Usage: %s [-s] CYCLES\n", argv[0]);
            return -1;
         }
     }
    sscanf (argv[argc-1], "%d", &cycles);

    step_by_step = argc == 3;

    read_bytes = fread (circuit_inputs,1, $(circuit_inputs_array_length), stdin);
    if (read_bytes != $(circuit_inputs_array_length))
     {
        fprintf (stderr, "Incomplete input (%d input bits needed)\n",
                        $(circuit_inputs_array_length));
        return -1;
     }
    
    for (i = 0 ; i < $(circuit_inputs_array_length) ; i++)
     {
       if ($(circuit_inputs_array_name)[i] == '0')
         {
            $(circuit_inputs_array_name)[i] = 0;
         }
        else if ($(circuit_inputs_array_name)[i] == '1')
         {
            $(circuit_inputs_array_name)[i] = 1;
         }
        else
         {
            fprintf (stderr, "Bad input format (input must consist of \
0s and 1s)\n");
            return -1;
         }
     }

    $(gates_outputs_array_name)[0] = 0;
    $(gates_outputs_array_name)[1] = 1;

