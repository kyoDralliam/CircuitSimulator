And_fold <1> (a[1])
	-> o : a;
And_fold <n> (a[n])
	And_fold<n-1> Tail(a[0..n-2])
	And Head(a[n-1], Tail.o)
	-> o : Head.o;

Counter_reset<1> (e, r)
    Reg Mem(New_value.o)

    Not Not_reset (r)
    And New_value (Result.o, Not_reset.o)

    Xor Result(Mem.o,e)
    And Carry(Mem.o,e)
    -> o : Mem.o, c : Carry.o;

Counter_reset<n> (e, r)
    Counter_reset<n-1> L(e, r)
    Counter_reset<1> H(L.c, r)
    -> o[n] : {L.o, H.o}, c : H.c;


Count_mod_24 (e)
    Counter_reset<5> C(e, Reset.o)

    Not Not_3(C.o[3])

    And_fold<6> Reset({C.o[0], C.o[1], C.o[2], Not_3.o, C.o[4], e})
    -> o[5] : C.o, c : Reset.o;

Start ()
    Vdd V
    Count_mod_24 C (V.o)
    -> o[5] : C.o;

start Start
